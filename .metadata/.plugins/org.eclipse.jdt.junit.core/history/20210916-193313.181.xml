<?xml version="1.0" encoding="UTF-8"?><testrun name="parkingsystem" project="parkingsystem" tests="10" started="10" failures="0" errors="1" ignored="0">
  <testsuite name="com.parkit.parkingsystem.integration.ParkingDataBaseIT" time="20.918" displayname="ParkingDataBaseIT" uniqueid="[engine:junit-jupiter]/[class:com.parkit.parkingsystem.integration.ParkingDataBaseIT]">
    <testcase name="testParkingLotExit" classname="com.parkit.parkingsystem.integration.ParkingDataBaseIT" time="12.726" displayname="testParkingLotExit()" uniqueid="[engine:junit-jupiter]/[class:com.parkit.parkingsystem.integration.ParkingDataBaseIT]/[method:testParkingLotExit()]"/>
    <testcase name="testParkingACar" classname="com.parkit.parkingsystem.integration.ParkingDataBaseIT" time="8.191" displayname="testParkingACar()" uniqueid="[engine:junit-jupiter]/[class:com.parkit.parkingsystem.integration.ParkingDataBaseIT]/[method:testParkingACar()]">
      <error>org.mockito.exceptions.misusing.UnnecessaryStubbingException: 
Unnecessary stubbings detected.
Clean &amp; maintainable test code requires zero unnecessary code.
Following stubbings are unnecessary (click to navigate to relevant line of code):
  1. -&gt; at com.parkit.parkingsystem.integration.ParkingDataBaseIT.setUpPerTest(ParkingDataBaseIT.java:41)
Please remove unnecessary stubbings or use 'lenient' strictness. More info: javadoc for UnnecessaryStubbingException class.&#13;
	at org.mockito.junit.jupiter.MockitoExtension.afterEach(MockitoExtension.java:211)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeAfterEachCallbacks$11(TestMethodTestDescriptor.java:218)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:72)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeAllAfterMethodsOrCallbacks$13(TestMethodTestDescriptor.java:230)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeAllAfterMethodsOrCallbacks(TestMethodTestDescriptor.java:228)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeAfterEachCallbacks(TestMethodTestDescriptor.java:217)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:120)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:59)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$4(NodeTestTask.java:108)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:72)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:98)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:74)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$4(NodeTestTask.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:72)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:98)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:74)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$4(NodeTestTask.java:112)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:72)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:98)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:74)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)&#13;
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:100)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:541)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:768)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:464)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:210)&#13;
&#13;
</error>
    </testcase>
  </testsuite>
  <testsuite name="com.parkit.parkingsystem.FareCalculatorServiceTest" time="0.022" displayname="FareCalculatorServiceTest" uniqueid="[engine:junit-jupiter]/[class:com.parkit.parkingsystem.FareCalculatorServiceTest]">
    <testcase name="calculateFareCarWithLessThanOneHourParkingTime" classname="com.parkit.parkingsystem.FareCalculatorServiceTest" time="0.003" displayname="calculateFareCarWithLessThanOneHourParkingTime()" uniqueid="[engine:junit-jupiter]/[class:com.parkit.parkingsystem.FareCalculatorServiceTest]/[method:calculateFareCarWithLessThanOneHourParkingTime()]"/>
    <testcase name="calculateFareUnkownType" classname="com.parkit.parkingsystem.FareCalculatorServiceTest" time="0.001" displayname="calculateFareUnkownType()" uniqueid="[engine:junit-jupiter]/[class:com.parkit.parkingsystem.FareCalculatorServiceTest]/[method:calculateFareUnkownType()]"/>
    <testcase name="calculateFareCar" classname="com.parkit.parkingsystem.FareCalculatorServiceTest" time="0.0" displayname="calculateFareCar()" uniqueid="[engine:junit-jupiter]/[class:com.parkit.parkingsystem.FareCalculatorServiceTest]/[method:calculateFareCar()]"/>
    <testcase name="calculateFareBike" classname="com.parkit.parkingsystem.FareCalculatorServiceTest" time="0.0" displayname="calculateFareBike()" uniqueid="[engine:junit-jupiter]/[class:com.parkit.parkingsystem.FareCalculatorServiceTest]/[method:calculateFareBike()]"/>
    <testcase name="calculateFareCarWithMoreThanADayParkingTime" classname="com.parkit.parkingsystem.FareCalculatorServiceTest" time="0.012" displayname="calculateFareCarWithMoreThanADayParkingTime()" uniqueid="[engine:junit-jupiter]/[class:com.parkit.parkingsystem.FareCalculatorServiceTest]/[method:calculateFareCarWithMoreThanADayParkingTime()]"/>
    <testcase name="calculateFareBikeWithLessThanOneHourParkingTime" classname="com.parkit.parkingsystem.FareCalculatorServiceTest" time="0.001" displayname="calculateFareBikeWithLessThanOneHourParkingTime()" uniqueid="[engine:junit-jupiter]/[class:com.parkit.parkingsystem.FareCalculatorServiceTest]/[method:calculateFareBikeWithLessThanOneHourParkingTime()]"/>
    <testcase name="calculateFareBikeWithFutureInTime" classname="com.parkit.parkingsystem.FareCalculatorServiceTest" time="0.001" displayname="calculateFareBikeWithFutureInTime()" uniqueid="[engine:junit-jupiter]/[class:com.parkit.parkingsystem.FareCalculatorServiceTest]/[method:calculateFareBikeWithFutureInTime()]"/>
  </testsuite>
  <testsuite name="com.parkit.parkingsystem.ParkingServiceTest" time="0.047" displayname="ParkingServiceTest" uniqueid="[engine:junit-jupiter]/[class:com.parkit.parkingsystem.ParkingServiceTest]">
    <testcase name="processExitingVehicleTest" classname="com.parkit.parkingsystem.ParkingServiceTest" time="0.047" displayname="processExitingVehicleTest()" uniqueid="[engine:junit-jupiter]/[class:com.parkit.parkingsystem.ParkingServiceTest]/[method:processExitingVehicleTest()]"/>
  </testsuite>
</testrun>
